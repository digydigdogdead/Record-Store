@rendermode InteractiveAuto
@using Record_Store;

<h3 class="title is-size-4">Record Editor: @album.Name</h3>
<EditForm Model="Model" id="formAndButton" class="grid" OnSubmit="SaveChanges" FormName="detailsForm">
	<div id="form" class="fixed-grid">
		<div>
			<p>Name:</p>
			<p id="displayName">@album.Name</p>
			<InputText @bind-Value="Model.Name" @bind-Value:event="onchange"></InputText>
		</div>
		<div>
			<p>Artist:</p>
			<p>@album.Artist</p>
			<InputText @bind-Value="Model.Artist" @bind-Value:event="onchange"></InputText>
		</div>
		<div>
			<p>Year:</p>
			<p>@album.Year</p>
			<InputNumber @bind-Value="Model.Year" @bind-Value:event="onchange"></InputNumber>
		</div>
		<div>
			<p>Genre:</p>
			<p>@album.ParentGenre.ToString()</p>
			<InputSelect @bind-Value="Model.ParentGenre" @bind-Value:event="onchange">
				@foreach (var genre in Enum.GetValues(typeof(ParentGenre)))
				{
					<option>@genre</option>
				}
			</InputSelect>
		</div>
		<div>
			<p>Subgenre:</p>
			<p>@album.Subgenre</p>
			<InputText @bind-Value="Model.Subgenre" @bind-Value:event="onchange"></InputText>
		</div>
	</div>
	<div class="cell is-one-third">
		<button class="button is-white is-big is-centered">Save Changes</button>
	</div>
</EditForm>

@code {
	[SupplyParameterFromForm]
	private Album? Model { get; set; } = new();

	[Parameter]
	public Album album { get; set; } = new Album
		{
			Name = "Take Me Back To Eden",
			Artist = "Sleep Token",
			Id = 1,
			ParentGenre = ParentGenre.METAL,
			Subgenre = "Alternative Metal",
			Year = 2023
		};

	public Album tempAlbum = new();


	public void SaveChanges()
	{

		if (!String.IsNullOrEmpty(Model.Name))
		{
			album.Name = Model.Name;
		}

		if (!String.IsNullOrEmpty(Model.Artist))
		{
			album.Artist = Model.Artist;
		}

		album.ParentGenre = Model.ParentGenre;

		if (!String.IsNullOrEmpty(Model.Subgenre))
		{
			album.Subgenre = Model.Subgenre;
		}

		if (Model.Year != 0)
		{
			album.Year = Model.Year;
		}

		StateHasChanged();
	}
}
